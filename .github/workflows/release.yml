name: Release

on:
  push:
    tags:
      - '*/[0-9]+.[0-9]+.[0-9]+*' # Matches tags like 1.13-1.20/1.0.0 or 1.13-1.20/1.0.0-alpha

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    env:
      # Input
      PROJECT_NAME: Reload Feedback

      MODRINTH_ID: KmRgBUgi

      LOADERS: datapack

      GAME_VERSION_FILTER: releases

      DEPENDENCIES: ""

      # Default values
      VERSION: ""
      VERSION_RANGE: ""
      VERSION_TYPE: ""
      RELEASE_NAME: ""
      GAME_VERSIONS: ""
      SOURCE_DATAPACK_FOLDER: ""
      OUTPUT_DATAPACK_FILE_GITHUB: ""
      OUTPUT_DATAPACK_FILE_MODRINTH: ""

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Variables
        run: |
          TAG="$GITHUB_REF_NAME"

          VERSION="${TAG##*/}"
          VERSION_RANGE="${TAG%%/*}"

          # Detect version type
          if [[ "$VERSION" == *-b ]] || [[ "$VERSION" == *-beta ]]; then
            VERSION_TYPE="beta"
          elif [[ "$VERSION" == *-a ]] || [[ "$VERSION" == *-alpha ]]; then
            VERSION_TYPE="alpha"
          else
            # Extract the first number before the first dot
            major_number="${VERSION%%.*}"

            if [[ "$major_number" == "0" ]]; then
              VERSION_TYPE="alpha"
            else
              VERSION_TYPE="release"
            fi
          fi

          RELEASE_NAME="[$VERSION_RANGE] $PROJECT_NAME $VERSION"

          SOURCE_DATAPACK_FOLDER="src/$VERSION_RANGE/$PROJECT_NAME"

          OUTPUT_DATAPACK_FILE_BASENAME="$PROJECT_NAME v$VERSION"
          OUTPUT_DATAPACK_FILE_GITHUB="${OUTPUT_DATAPACK_FILE_BASENAME// /-}.zip"
          OUTPUT_DATAPACK_FILE_MODRINTH="$OUTPUT_DATAPACK_FILE_BASENAME.zip"

          # Export variables
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"
          echo "VERSION_RANGE=$VERSION_RANGE" >> "$GITHUB_ENV"
          echo "VERSION_TYPE=$VERSION_TYPE" >> "$GITHUB_ENV"
          echo "RELEASE_NAME=$RELEASE_NAME" >> "$GITHUB_ENV"
          echo "SOURCE_DATAPACK_FOLDER=$SOURCE_DATAPACK_FOLDER" >> "$GITHUB_ENV"
          echo "OUTPUT_DATAPACK_FILE_GITHUB=$OUTPUT_DATAPACK_FILE_GITHUB" >> "$GITHUB_ENV"
          echo "OUTPUT_DATAPACK_FILE_MODRINTH=$OUTPUT_DATAPACK_FILE_MODRINTH" >> "$GITHUB_ENV"

      - name: Load Version-Specific Variables
        run: |
          if [ -f "src/$VERSION_RANGE/release.env" ]; then
            set -a
            source "src/$VERSION_RANGE/release.env"
            set +a
          else
            echo "Error: src/$VERSION_RANGE/release.env not found."
            exit 1
          fi

          # Warn if GAME_VERSIONS is not set
          if [ -z "$GAME_VERSIONS" ]; then
            echo "Error: GAME_VERSIONS is required."
            exit 1
          fi

          echo "GAME_VERSIONS=$GAME_VERSIONS" >> "$GITHUB_ENV"
          echo "VERSION_TYPE=$VERSION_TYPE" >> "$GITHUB_ENV"

      - name: Extract Changelog
        # Matches "## [1.0.0]\n..."
        id: changelog
        run: |
          echo "Extracting changelog for version $VERSION..."
          changelog=$(awk "/^## \[${VERSION//./\\.}\]/ {flag=1; next} /^## / {flag=0} flag" CHANGELOG.md)
          changelog="${changelog//'%'/'%25'}"
          changelog="${changelog//$'\r'/}"

          if [ -z "$changelog" ]; then
            echo "No changelog entry found for version $VERSION."
            changelog=""
          fi

          echo "log<<EOF" >> "$GITHUB_OUTPUT"
          echo "$changelog" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Package Data Pack
        working-directory: ${{ env.SOURCE_DATAPACK_FOLDER }}
        run: |
          zip -r "output.zip" ./*
          cp "output.zip" "$GITHUB_WORKSPACE/${{ env.OUTPUT_DATAPACK_FILE_GITHUB }}"
          cp "output.zip" "$GITHUB_WORKSPACE/${{ env.OUTPUT_DATAPACK_FILE_MODRINTH }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ env.RELEASE_NAME }}
          body: ${{ steps.changelog.outputs.log }}
          files: |
            ${{ env.OUTPUT_DATAPACK_FILE_GITHUB }}

      - name: Create Modrinth Release
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          loaders:  ${{ env.LOADERS }}
          version-type:  ${{ env.VERSION_TYPE }}
          dependencies: ${{ env.DEPENDENCIES }}

          name: ${{ env.RELEASE_NAME }}
          version: ${{ env.VERSION }}
          changelog: ${{ steps.changelog.outputs.log }}

          game-version-filter: ${{ env.GAME_VERSION_FILTER }}
          game-versions: ${{ env.GAME_VERSIONS }}

          modrinth-id: ${{ env.MODRINTH_ID }}
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}

          modrinth-files: |
            ${{ env.OUTPUT_DATAPACK_FILE_MODRINTH }}